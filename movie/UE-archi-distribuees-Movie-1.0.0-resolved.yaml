---
openapi: 3.0.0
info:
  title: Movie API
  description: This is the API of the Movie service
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
- url: http://localhost:3200
  description: For local tests
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /json:
    get:
      tags:
      - developers
      summary: get the full JSON database
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieID'
  /movies/{movieid}:
    get:
      tags:
      - developers
      summary: get the movie by its id
      description: |
        By passing in the appropriate options, you can get info of a Movie
      operationId: get_movie_byid
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: Movie description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: add a movie item
      description: Adds a movie to the system
      operationId: create_movie
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieItem'
      responses:
        "200":
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "409":
          description: an existing item already exists
    put:
      tags:
      - admins
      summary: update a movie rate
      description: update the rating of a movie
      operationId: update_movie_rating
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      - name: rate
        in: query
        description: Movie rating.
        required: true
        style: form
        explode: false
        schema:
          maximum: 10
          minimum: 0
          type: integer
      responses:
        "200":
          description: rate updated
        "400":
          description: movie ID not found or QueryParam rate is requiered
    delete:
      tags:
      - admins
      summary: delete a movie item
      description: Adds a movie to the system
      operationId: del_movie
      parameters:
      - name: movieid
        in: path
        description: Movie ID.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: item deleted
        "400":
          description: ID not found
  /moviesbytitle:
    get:
      tags:
      - developers
      summary: get the movie by its title
      description: |
        By passing in the appropriate options, you can get Movie info
      operationId: get_movie_bytitle
      parameters:
      - name: title
        in: query
        description: pass a title
        required: true
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieItem'
        "400":
          description: bad input parameter
  /moviesbydirector:
    get:
      tags:
      - developers
      summary: get movies by its director
      description: |
        By passing in the appropriate options, you can get movies for a director
      operationId: get_movies_bydirector
      parameters:
      - name: director
        in: query
        description: pass a director
        required: true
        style: form
        explode: true
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: Movie item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieID'
        "400":
          description: bad input parameter
components:
  schemas:
    MovieID:
      type: array
      items:
          $ref: '#/components/schemas/MovieItem'
    MovieItem:
      required:
      - director
      - rating
      - title
      - id
      type: object
      properties:
        title:
          type: string
          example: The Martian
        rating:
          type: string
          example: "7"
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: tt0108052
